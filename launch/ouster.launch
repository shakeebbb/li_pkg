<launch>

  <arg name="launch_cropbox" default="false"/>

  <!-- *************************** Ouster Launch *************************** -->

	<arg name="mav_name" default="$(env ROS_NAMESPACE)"/>

  <arg name="os1_hostname" default="os1-991930000414.local" doc="hostname or IP in dotted decimal form of the sensor"/>
  <arg name="os1_udp_dest" default="169.254.9.251" doc="hostname or IP where the sensor will send data packets"/>
  <arg name="os1_lidar_port" default="7502" doc="port to which the sensor should send lidar data"/>
  <arg name="os1_imu_port" default="7503" doc="port to which the sensor should send imu data"/>
  <arg name="replay" default="false" doc="do not connect to a sensor; expect /os1_node/{lidar,imu}_packets from replay"/>
  <arg name="lidar_mode" default="1024x10" doc="resolution and rate: either 512x10, 512x20, 1024x10, 1024x20, or 2048x10"/>
  <arg name="timestamp_mode" default="TIME_FROM_INTERNAL_OSC" doc="method used to timestamp measurements: TIME_FROM_INTERNAL_OSC, TIME_FROM_SYNC_PULSE_IN, TIME_FROM_PTP_1588"/>
  <arg name="metadata" default="" doc="override default metadata file for replays"/>
  <arg name="viz" default="false" doc="whether to run a simple visualizer"/>
  <arg name="image" default="false" doc="publish range/intensity/noise image topic"/>
  <arg name="tf_prefix" default="$(arg mav_name)" doc="namespace for tf transforms"/>

  <node pkg="ouster_ros" name="os1_node" type="os1_node" output="screen">
    <param name="~/lidar_mode" type="string" value="$(arg lidar_mode)"/>
    <param name="~/timestamp_mode" type="string" value="$(arg timestamp_mode)"/>
    <param name="~/replay" value="$(arg replay)"/>
    <param name="~/os1_hostname" value="$(arg os1_hostname)"/>
    <param name="~/os1_udp_dest" value="$(arg os1_udp_dest)"/>
    <param name="~/os1_lidar_port" value="$(arg os1_lidar_port)"/>
    <param name="~/os1_imu_port" value="$(arg os1_imu_port)"/>
    <param name="~/metadata" value="$(arg metadata)"/>
  </node>

  <node pkg="ouster_ros" type="os1_cloud_node" name="os1_cloud_node" output="screen">
    <remap from="~/os1_config" to="os1_node/os1_config"/>
    <remap from="~/lidar_packets" to="os1_node/lidar_packets"/>
    <remap from="~/imu_packets" to="os1_node/imu_packets"/>
    <param name="~/tf_prefix" value="$(arg tf_prefix)"/>
  </node>

  <node if="$(arg viz)" pkg="ouster_ros" name="viz_node" type="viz_node" output="screen">
    <remap from="~/os1_config" to="/os1_node/os1_config"/>
    <remap from="~/points" to="/os1_cloud_node/points"/>
  </node>

  <node if="$(arg image)" pkg="ouster_ros" name="img_node" type="img_node" output="screen">
    <remap from="~/os1_config" to="/os1_node/os1_config"/>
    <remap from="~/points" to="/os1_cloud_node/points"/>
  </node>

  <!-- *************************** Cropbox Launch *************************** -->

  <node if="$(arg launch_cropbox)" pkg="nodelet" type="nodelet" name="cropbox_filter_pcl_manager" args="manager" output="screen"/>  <!-- A CropBox filter to avoid points at the Ouster origin -->
  <node if="$(arg launch_cropbox)" pkg="nodelet" type="nodelet" name="self_removal" args="load pcl/CropBox cropbox_filter_pcl_manager" output="screen">
    <remap from="~input" to="os1_cloud_node/points"/>
    <remap from="~output" to="os1_cloud_node/points_box_filter"/>
    <rosparam subst_value="true">
      input_frame: $(arg mav_name)/os1_lidar
      output_frame: $(arg mav_name)/os1_lidar
      # true: no points in the box, false: no points outside the box
      negative: true
      min_x: -0.4
      max_x:  0.4
      min_y: -0.4
      max_y:  0.4
      min_z: -0.4
      max_z:  0.4
    </rosparam>
  </node>

</launch>
